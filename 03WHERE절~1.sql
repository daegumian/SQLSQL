--WHARE절
SELECT * FROM employees;
SELECT * FROM EMPLOYEES WHERE SALARY = 4800; --같다
SELECT * FROM EMPLOYEES WHERE SALARY <> 4800; --같지않다
SELECT * FROM EMPLOYEES WHERE department_id >= 100; --이상
SELECT * FROM EMPLOYEES WHERE department_id < 50; --미만
SELECT * FROM EMPLOYEES WHERE job_id = 'AD_ASST'; --안보이는 건 _ 가 들어가 있는것 --문자

--BETWEEN~AND, IN, LIKE
SELECT * FROM EMPLOYEES WHERE SALARY BETWEEN 6000 AND 9000; --이상~이하
SELECT * FROM EMPLOYEES WHERE HIRE_DATE BETWEEN '08/01/01' AND '08/12/31'; --날짜도 대소비교가 된다

SELECT * FROM EMPLOYEES WHERE DEPARTMENT_ID IN (10,20,30,40,50); --정확히 일치하는
SELECT * FROM EMPLOYEES WHERE JOB_ID IN('ST_MAN', 'IT_PROG', 'HR_REP');

SELECT * FROM EMPLOYEES WHERE JOB_ID LIKE 'IT%'; --IT로 시작하는
SELECT * FROM EMPLOYEES WHERE HIRE_DATE LIKE '%03'; --3일
SELECT * FROM EMPLOYEES WHERE HIRE_DATE LIKE '%12%'; --12가 포함된
SELECT * FROM EMPLOYEES WHERE HIRE_DATE LIKE '___05%'; --_갯수만큼 아무거나, 05가 4,5번째
SELECT * FROM EMPLOYEES WHERE FIRST_NAME LIKE '_a%'; -- a가 두번째

--IS NULL, IT NOT NULL
SELECT * FROM EMPLOYEES WHERE COMMISSION_PCT = NULL; --X
SELECT * FROM EMPLOYEES WHERE COMMISSION_PCT IS NULL; -- O
SELECT * FROM EMPLOYEES WHERE COMMISSION_PCT IS NOT NULL; -- 반대

--NOT, OR, AND
SELECT * FROM EMPLOYEES WHERE NOT SALARY >= 6000; --NOT <>과 동일한 표현
--AND가 OR보다 우선순위가 빠름
SELECT * FROM EMPLOYEES WHERE SALARY >= 6000 AND SALARY <= 12000; -- (=BETWEEN 6000 AND 12000)
SELECT * FROM EMPLOYEES WHERE JOB_ID = 'IT_PROG' AND SALARY >= 6000; --둘 다 만족
SELECT * FROM EMPLOYEES WHERE JOB_ID = 'IT_PROG' OR SALARY >= 6000; --둘 중 하나 만족

SELECT *FROM EMPLOYEES WHERE JOB_ID = 'IT_PROG' OR JOB_ID = 'FI_MGR' AND SALARY >= 6000;
                        -- (=FI중 6000이상인 사람 OR IT_PROG)
SELECT *FROM EMPLOYEES WHERE (JOB_ID = 'IT_PROG' OR JOB_ID = 'FI_MGR') AND SALARY >= 6000;
                        -- (=IT_PROG OR FI_MGR 중 SALARY가 6000이상인 사람)
                        
---------------------------------------------------------------------------
--ORDER BY 컬럼(엘리어스)
SELECT * FROM EMPLOYEES ORDER BY HIRE_DATE; --날짜 기준 ASC
SELECT * FROM EMPLOYEES ORDER BY HIRE_DATE DESC; -- 역 날짜 기준 DESC

SELECT * FROM EMPLOYEES WHERE JOB_ID IN('IT_PROG', 'ST_MAN') ORDER BY FIRST_NAME DESC;
SELECT * FROM EMPLOYEES WHERE SALARY BETWEEN 6000 AND 12000 ORDER BY EMPLOYEE_ID;

--ALIAS도 ORDER절에 사용할 수 있음
SELECT FIRST_NAME, SALARY*12 AS PAY FROM EMPLOYEES ORDER BY PAY ASC;
--정렬 여러개 ,로 나열
SELECT FIRST_NAME, SALARY, JOB_ID FROM EMPLOYEES ORDER BY JOB_ID ASC, SALARY DESC;
                                                --(=동일한 JOB_ID면 SALARY기준으로 정렬)
